#include <iostream>
using namespace std;
// 0-1 Knapsack
int main() {
	int n,sum;
	cin>>n>>sum;
	int weight[n],value[n];
	
	//initilaze weight and value
	for(int i=0;i<n;i++)
	 cin>>weight[i];
	 
	for(int i=0;i<n;i++)
	 cin>>value[i];
	 
	 
	int dp[n+1][sum+1];
	
	//initilize first row and first column of dp zero
	for(int i=0;i<sum+1;i++)
	 dp[0][i]=0;
	
	for(int i=0;i<n+1;i++)
	 dp[i][0]=0;
	 
	for(int i=1;i<n+1;i++)
	{
	      for(int j=1;j<sum+1;j++)
	      {
	            if(weight[i-1]<=j)
	             dp[i][j]=max(value[i-1]+dp[i-1][j-weight[i-1]],dp[i-1][j]);
	            else
	             dp[i][j]=dp[i-1][j];
	      }
	}
	//max value to fill knaapsack with given sum
	cout<<dp[n][sum]<<"\n";
	return 0;
}
